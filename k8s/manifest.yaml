apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-presets-config
  namespace: kube-system
  labels:
    app: cluster-presets
data:
  presets.yaml: |
    env:
    - name: CLUSTER
      value: us-west-1
    - name: STAGING_LEVEL
      value: production

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-presets-cluster-role
  labels:
    app: cluster-presets
rules:
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations"]
    verbs: ["get", "list", "watch", "patch"]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-presets-service-account
  namespace: kube-system
  labels:
    app: cluster-presets

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-presets-cluster-role-binding
  labels:
    app: cluster-presets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-presets-cluster-role
subjects:
  - kind: ServiceAccount
    name: cluster-presets-service-account
    namespace: kube-system

---
apiVersion: v1
kind: Service
metadata:
  name: cluster-presets-service
  namespace: kube-system
  labels:
    app: cluster-presets
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    app: cluster-presets

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-presets-deployment
  namespace: kube-system
  labels:
    app: cluster-presets
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: cluster-presets
  template:
    metadata:
      labels:
        app: cluster-presets
    spec:
      serviceAccountName: cluster-presets-service-account
      containers:
      - name: cluster-preset-webhook
        image: indeedoss/cluster-preset:latest
        imagePullPolicy: IfNotPresent
        args:
        - --preset=/etc/cluster-presets/config/presets.yaml
        - --cert=/etc/cluster-presets/certs/tls.crt
        - --key=/etc/cluster-presets/certs/tls.key
        - --port=8443
        volumeMounts:
        - name: certs
          mountPath: /etc/cluster-presets/certs
          readOnly: true
        - name: config
          mountPath: /etc/cluster-presets/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: cluster-presets-config
      - name: certs
        secret:
          secretName: cluster-preset-certs
